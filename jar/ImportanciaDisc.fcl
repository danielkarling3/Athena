FUNCTION_BLOCK dificuldade

	VAR_INPUT				
		dificuldade : REAL;
		requisitada : REAL;
	END_VAR

	VAR_OUTPUT				
		recomendar : REAL;
	END_VAR

	FUZZIFY dificuldade
		TERM A  := gauss 0 25;
		TERM B  := gauss 50 10;
		TERM C  := gauss 100 25;		
	END_FUZZIFY

	FUZZIFY requisitada
		TERM A  := sigm 3 3;
		TERM B  := gauss 2.5 1;
		TERM C  := sigm -3 1;
	END_FUZZIFY


	DEFUZZIFY recomendar
		TERM MA := (80,0)  (100,1);
		TERM A  := (50,0)  (75,1) (100,0);
		TERM M  := (20,0)  (50,1) (80,0);
		TERM B  := (0,0)   (25,1) (50,0);
		TERM MB := (0,1)   (20,0);
		
		// Use 'Center Of Gravity' defuzzification method
		METHOD : COG;
		// Default value is 0 (if no rule activates defuzzifier)
		DEFAULT := 0;
	END_DEFUZZIFY
	
	RULEBLOCK regras
		// Use 'min' for 'and' (also implicit use 'max'
		// for 'or' to fulfill DeMorgan's Law)
		AND : MIN;
		// Use 'min' activation method
		ACT : MIN;
		// Use 'max' accumulation method
		ACCU : MAX;
		
		RULE 1: IF requisitada IS A AND dificuldade IS A THEN recomendar IS MA;
		RULE 2: IF requisitada IS A AND dificuldade IS B THEN recomendar IS A;
		RULE 3: IF requisitada IS A AND dificuldade IS C THEN recomendar IS B;
		RULE 4: IF requisitada IS B AND dificuldade IS A THEN recomendar IS A;
		RULE 5: IF requisitada IS B AND dificuldade IS B THEN recomendar IS M;
		RULE 6: IF requisitada IS B AND dificuldade IS C THEN recomendar IS B;			
		RULE 7: IF requisitada IS C AND dificuldade IS A THEN recomendar IS B;			
		RULE 8: IF requisitada IS C AND dificuldade IS B THEN recomendar IS B;			
		RULE 9: IF requisitada IS C AND dificuldade IS C THEN recomendar IS MB;			
	
	END_RULEBLOCK	
	
END_FUNCTION_BLOCK
