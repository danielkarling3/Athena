FUNCTION_BLOCK dificuldade

	VAR_INPUT				
		dificuldade : REAL;
		requisitada : REAL;
	END_VAR

	VAR_OUTPUT				
		recomendar : REAL;
	END_VAR

	FUZZIFY dificuldade
		TERM BAIXA  := (0,1) (10, 1) (40, 0);
		TERM MEDIA  := (20, 0) (40, 1) (50, 1) (70, 0);
		TERM ALTA  :=  (50, 0)  (80, 1) (100, 1);
	END_FUZZIFY

	FUZZIFY requisitada
                TERM ALTA  := (0, 0) (1, 0) (3, 0.5) (4, 0.7) (5, 1) (12, 1);
                TERM BAIXA  := (0, 1) (1, 1) (3, 0.2) (4, 0) (5, 0) (12, 0);

                //TERM ALTA  := sigm 2.5 3;
		//TERM MEDIA  := gauss 2.5 1;
		//TERM BAIXA  := sigm -3 1;
	END_FUZZIFY


	DEFUZZIFY recomendar
		TERM MuitoAlta := (80,0)  (100,1);
		TERM Alta  := (50,0)  (75,1) (100,0);
		TERM Media  := (20,0)  (50,1) (80,0);
		TERM Baixa  := (0,0)   (25,1) (50,0);
		TERM MuitoBaixa := (0,1)   (20,0);
		
		// Use 'Center Of Gravity' defuzzification method
		METHOD : COG;
		// Default value is 0 (if no rule activates defuzzifier)
		DEFAULT := 0;
	END_DEFUZZIFY
	
	RULEBLOCK regras
		// Use 'min' for 'and' (also implicit use 'max'
		// for 'or' to fulfill DeMorgan's Law)
		AND : MIN;
		// Use 'min' activation method
		ACT : MIN;
		// Use 'max' accumulation method
		ACCU : MAX;
		
		RULE 1: IF requisitada IS ALTA AND dificuldade IS BAIXA THEN recomendar IS MuitoAlta;
		RULE 2: IF requisitada IS ALTA AND dificuldade IS MEDIA THEN recomendar IS Alta;
		RULE 3: IF requisitada IS ALTA AND dificuldade IS ALTA THEN recomendar IS Media;

		RULE 4: IF requisitada IS BAIXA AND dificuldade IS BAIXA THEN recomendar IS Media;			
		RULE 5: IF requisitada IS BAIXA AND dificuldade IS MEDIA THEN recomendar IS Baixa;			
		RULE 6: IF requisitada IS BAIXA AND dificuldade IS ALTA THEN recomendar IS MuitoBaixa;			

                
	END_RULEBLOCK	
	
END_FUNCTION_BLOCK
